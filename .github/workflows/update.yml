name: Update database
on:
  push:
  workflow_dispatch:
permissions:
  contents: write
jobs:
  get-matrix:
    runs-on: ubuntu-latest
    outputs:
      mod-list: ${{ steps.get-matrix.outputs.mod-list }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Restore Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Get Job Matrix
        id: get-matrix
        run: cargo run get-matrix

  run-mods:
    name: Get data for ${{ matrix.slug }}
    runs-on: ubuntu-latest
    needs: get-matrix
    strategy:
      matrix: ${{ fromJson(needs.get-matrix.outputs.mod-list) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Restore Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Run
        run: |
          cargo run mod:${{ matrix.slug }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: data-${{ matrix.slug }}
          path: data/${{ matrix.slug }}-1.*.json
          retention-days: 1

  combine:
    runs-on: ubuntu-latest
    needs: run-mods
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Restore Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Download data
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Combine Data
        id: combine
        run: |
          rm -rf data
          mkdir data
          cp artifacts/*/* data/
          cargo run combine

      - name: Capture date
        id: capture-date
        run: |
          echo "date=$(date -u)" >> "$GITHUB_OUTPUT"
          echo "timestamp=$(date -u +%Y-%m-%dT%H:%M:%S%z)" >> "$GITHUB_OUTPUT"

      - name: Commit changes
        id: commit
        uses: EndBug/add-and-commit@v9
        with:
          add: data stats.md
          committer_name: github-actions[bot]
          committer_email: 41898282+github-actions[bot]@users.noreply.github.com
          message: "Update database '${{ steps.capture-date.outputs.date }}'"
          pull: '--rebase --autostash'

      - name: Send Discord Notification
        uses: tsickert/discord-webhook@v5.4.0
        if: steps.commit.outputs.committed == 'true'
        with:
          webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
          embed-title: 'Carpet Rules Database Updated'
          embed-description: ${{ steps.combine.outputs.stats }}
          embed-color: 13538264
          embed-timestamp: ${{ steps.capture-date.outputs.timestamp }}
          embed-url: ${{ github.server_url }}/${{ github.repository }}/blob/${{ steps.commit.outputs.commit_long_sha }}/stats.md
          embed-author-name: Carpet Database
          embed-author-url: https://carpet.rubixdev.de
          embed-author-icon-url: https://raw.githubusercontent.com/RubixDev/carpet-database/3f3bec59fa4e1e7709348fb3cb5f1c6120f6ac3b/assets/logo.png
